@use 'sass:math';

$size300: 18.75em;
$size400: 25em;
$size500: 31.25em;
$size650: 40.625em;
$size800: 50em;
$size1000: 62.5em;
$size1200: 75em;
$size1600: 100em;

@mixin breakpoint($size) {
  @media only screen and (min-width: $size) {
    @content;
  }
}

.d300- {
  @include breakpoint($size300) {
    @for $i from 0 through 6 {
      &#{$i} {
        display: flex;
        flex-wrap: wrap;
        > * {
          flex-basis: auto;
          max-width: #{(math.div(100%, $i))};
          width: #{(math.div(100%, $i))};
          flex-grow: 1;
        }
      }
    }
  }
}

.d400- {
  @include breakpoint($size400) {
    @for $i from 0 through 6 {
      &#{$i} {
        display: flex;
        flex-wrap: wrap;
        > * {
          flex-basis: auto;
          max-width: #{(math.div(100%, $i))};
          width: #{(math.div(100%, $i))};
          flex-grow: 1;
        }
      }
    }
  }
}

.d500- {
  @include breakpoint($size500) {
    @for $i from 0 through 6 {
      &#{$i} {
        display: flex;
        flex-wrap: wrap;
        > * {
          flex-basis: auto;
          max-width: #{(math.div(100%, $i))};
          width: #{(math.div(100%, $i))};
          flex-grow: 1;
        }
      }
    }
  }
}

.d650- {
  @include breakpoint($size650) {
    @for $i from 0 through 6 {
      &#{$i} {
        display: flex;
        flex-wrap: wrap;
        > * {
          flex-basis: auto;
          max-width: #{(math.div(100%, $i))};
          width: #{(math.div(100%, $i))};
          flex-grow: 1;
        }
      }
    }
  }
}

.d800- {
  @include breakpoint($size800) {
    @for $i from 0 through 6 {
      &#{$i} {
        display: flex;
        flex-wrap: wrap;
        > * {
          flex-basis: auto;
          max-width: #{(math.div(100%, $i))};
          width: #{(math.div(100%, $i))};
          flex-grow: 1;
        }
      }
    }
  }
}

.d1000- {
  @include breakpoint($size1000) {
    @for $i from 0 through 6 {
      &#{$i} {
        display: flex;
        flex-wrap: wrap;
        > * {
          flex-basis: auto;
          max-width: #{(math.div(100%, $i))};
          width: #{(math.div(100%, $i))};
          flex-grow: 1;
        }
      }
    }
  }
}

.d1200- {
  @include breakpoint($size1200) {
    @for $i from 0 through 6 {
      &#{$i} {
        display: flex;
        flex-wrap: wrap;
        > * {
          flex-basis: auto;
          max-width: #{(math.div(100%, $i))};
          width: #{(math.div(100%, $i))};
          flex-grow: 1;
        }
      }
    }
  }
}

.d1600- {
  @include breakpoint($size1600) {
    @for $i from 0 through 6 {
      &#{$i} {
        display: flex;
        flex-wrap: wrap;
        > * {
          flex-basis: auto;
          max-width: #{(math.div(100%, $i))};
          width: #{(math.div(100%, $i))};
          flex-grow: 1;
        }
      }
    }
  }
}

*.no-grow {
  flex-grow: 0;
}
